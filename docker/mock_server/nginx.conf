events{
    worker_connections 512;
    multi_accept on;
    use epoll;
}

http {
    # ログフォーマットの定義
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # アクセスログとエラーログの設定
    access_log /dev/stderr main;
    error_log /dev/stderr warn;

    resolver 127.0.0.11 ipv6=off;

    map $uri $mock_server {
        # mockで接続したい方のコメントアウトを外してください。
        # common
        ~^/api/v1.0/common(.*)  127.0.0.1:4011;
        # ~^/api/v1.0/common(.*)  common:5000;

        # etl
        ~^/api/v1.0/etl(.*)  127.0.0.1:4012;
        # ~^/api/v1.0/etl(.*)  etl:5000;

        # generalsearch
        ~^/api/v1.0/generalsearch(.*)  127.0.0.1:4013;
        # ~^/api/v1.0/generalsearch(.*)  generalsearch:5000;

        # support
        ~^/api/v1.0/support(.*)  127.0.0.1:4014;
        # ~^/api/v1.0/support(.*)  support:5000;

        # information
        ~^/api/v1.0/information(.*)  127.0.0.1:4015;
        # ~^/api/v1.0/information(.*)  information:5000;

        # faq
        ~^/api/v1.0/faq(.*)  127.0.0.1:4016;
        # ~^/api/v1.0/faq(.*)  faq:5000;

        # notification
        ~^/api/v1.0/notification(.*)  127.0.0.1:4017;
        # ~^/api/v1.0/notification(.*)  notification:5000;

        # enterprisesearch
        ~^/api/v1.0/enterprisesearch(.*)  127.0.0.1:4018;
        # ~^/api/v1.0/enterprisesearch(.*)  enterprisesearch:5000;

        # meeting
        ~^/api/v1.0/meeting(.*)  127.0.0.1:4019;
        # ~^/api/v1.0/meeting(.*)  meeting:5000;
    
        # ergate
        ~^/api/v1.0/ergate(.*)  127.0.0.1:4020;
        # ~^/api/v1.0/ergate(.*)  ergate:5000;


        # マッチしない場合のデフォルト設定
        default      127.0.0.1:4010;
    }

    map $mock_server $is_backend_port {
        common:5000         0;
        etl:5000           0;
        generalsearch:5000 0;
        support:5000       0;
        information:5000   0;
        faq:5000          0;
        notification:5000  0;
        enterprisesearch:5000 0;
        meeting:5000       0;
        ergate:5000       0;
        default 1;        # それ以外は1
    }

    server {
        listen 4010;
        server_name  localhost;

        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'http://localhost:3001';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                # Tips: headerで渡す値は基本的にここに登録が必要
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-rvp-dp-uid,x-rvp-dp-password,x-csrf-token';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            if ($is_backend_port = 0) {
                # CORS headers
                add_header 'Access-Control-Allow-Credentials' 'true';
            }

            proxy_pass http://$mock_server$1$is_args$args;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            # TODO: この部分の定義をうまいこと環境変数にできないかどうか
            proxy_set_header x-dp-org-code "rvp-retail";
            proxy_set_header Referer "https://rvp-test-corp.rvp-product-dev.com/";
            # proxy_redirect default;

            # プロキシ先からのレスポンスヘッダーを保持
            proxy_pass_header Access-Control-Allow-Origin;
            proxy_pass_header Access-Control-Allow-Methods;
            proxy_pass_header Access-Control-Allow-Headers;
            proxy_pass_header Access-Control-Allow-Credentials;
        }
    }
}